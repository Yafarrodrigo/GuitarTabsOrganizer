# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gpoMainUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtCore import QThread, pyqtSignal
import os
import copyFiles
import moveFiles
import analyzeFiles
# import threading

class lunchFunc(QThread):
    progressChanged = pyqtSignal(int)

    progress = 0

    def update(self, value):
        self.progress = value
        self.progressChanged.emit(self.progress)

    def run(self):
        self.progressChanged.emit(self.progress)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(380, 150)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(420, 150))
        MainWindow.setMaximumSize(QtCore.QSize(420, 150))
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setMinimumSize(QtCore.QSize(420, 150))
        self.centralwidget.setMaximumSize(QtCore.QSize(420, 150))
        self.centralwidget.setObjectName("centralwidget")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(10, 125, 410, 20))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.startButton = QtWidgets.QPushButton(self.centralwidget)
        self.startButton.setGeometry(QtCore.QRect(210, 75, 200, 25))
        self.startButton.setObjectName("startButton")
        self.currentFileLabel = QtWidgets.QLabel(self.centralwidget)
        self.currentFileLabel.setGeometry(QtCore.QRect(10, 100, 375, 21))
        self.currentFileLabel.setText("")
        self.currentFileLabel.setObjectName("currentFileLabel")
        self.infoLabel = QtWidgets.QLabel(self.centralwidget)
        self.infoLabel.setGeometry(QtCore.QRect(80, 50, 101, 16))
        self.infoLabel.setObjectName("infoLabel")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(30, 65, 360, 15))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.directionTextBox = QtWidgets.QLineEdit(self.centralwidget)
        self.directionTextBox.setGeometry(QtCore.QRect(10, 10, 345, 25))
        self.directionTextBox.setFrame(True)
        self.directionTextBox.setProperty("text", os.getcwd())
        self.directionTextBox.setObjectName("directionTextBox")
        self.directionTextBox2 = QtWidgets.QLineEdit(self.centralwidget)
        self.directionTextBox2.setGeometry(QtCore.QRect(10, 40, 345, 25))
        self.directionTextBox2.setFrame(True)
        self.directionTextBox2.setProperty("text", os.getcwd())
        self.directionTextBox2.setObjectName("directionTextBox2")
        self.browseButton = QtWidgets.QPushButton(self.centralwidget)
        self.browseButton.setGeometry(QtCore.QRect(360, 10, 55, 25))
        self.browseButton.setObjectName("browseButton")
        self.browseButton2 = QtWidgets.QPushButton(self.centralwidget)
        self.browseButton2.setGeometry(QtCore.QRect(360, 40, 55, 25))
        self.browseButton2.setObjectName("browseButton2")
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(20, 75, 200, 25))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.analyseFile = QtWidgets.QRadioButton(self.widget)
        self.analyseFile.setChecked(True)
        self.analyseFile.setObjectName("analyseFile")
        self.horizontalLayout.addWidget(self.analyseFile)
        self.copyFile = QtWidgets.QRadioButton(self.widget)
        self.copyFile.setObjectName("copyFile")
        self.horizontalLayout.addWidget(self.copyFile)
        self.moveFile = QtWidgets.QRadioButton(self.widget)
        self.moveFile.setObjectName("moveFile")
        self.horizontalLayout.addWidget(self.moveFile)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.working = False

        self.startButton.clicked.connect(self.checkFuncAndStart)
        self.browseButton.clicked.connect(self.browseFolder)
        self.browseButton2.clicked.connect(self.browseFolder2)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Guitar Pro Organizer"))
        self.startButton.setText(_translate("MainWindow", "START"))
        self.infoLabel.setText(_translate("MainWindow", "Choose an action"))
        self.browseButton.setText(_translate("MainWindow", "Browse"))
        self.browseButton2.setText(_translate("MainWindow", "Browse"))
        self.analyseFile.setText(_translate("MainWindow", "Analyze"))
        self.copyFile.setText(_translate("MainWindow", "Copy"))
        self.moveFile.setText(_translate("MainWindow", "Move"))

    def browseFolder(self):
        folder = str(QFileDialog.getExistingDirectory(None, "Select Directory"))
        self.directionTextBox.setText(folder)

    def browseFolder2(self):
        folder = str(QFileDialog.getExistingDirectory(None, "Select Directory"))
        self.directionTextBox2.setText(folder)

    def checkFuncAndStart(self):
        directionInput = self.directionTextBox.text()
        directionOutput = self.directionTextBox2.text()

        if self.working == False:
            
            self.working == True

            if self.copyFile.isChecked():
                self.prog = lunchFunc()
                self.prog.progressChanged.connect(self.Progress)
                self.prog.start()

                copyFiles.main(directionInput,directionOutput , self)
                self.currentFileLabel.setText("")
                self.working = False

            elif self.moveFile.isChecked():
                self.prog = lunchFunc()
                self.prog.progressChanged.connect(self.Progress)
                self.prog.start()

                moveFiles.main(directionInput,directionOutput , self)
                self.currentFileLabel.setText("")
                self.working = False

            elif self.analyseFile.isChecked():
                self.prog = lunchFunc()
                self.prog.progressChanged.connect(self.Progress)
                self.prog.start()

                analyzeFiles.main(directionInput,directionOutput , self)
                self.currentFileLabel.setText("")
                self.working = False

    
    def changeSong(self, song):
        self.currentFileLabel.setText(song)

    def Progress(self, value):
        self.progressBar.setValue(value)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
